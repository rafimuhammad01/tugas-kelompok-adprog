image: gradle:6.3.0-jdk11

services:
  - postgres:latest

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"
  DATABASE_URL: jdbc:postgresql://postgres:5432/postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: postgres
  POSTGRES_PASSWORD: postgres
  SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
  SPRING_DATASOURCE_USER: postgres
  SPRING_DATASOURCE_PASSWORD: postgres

before_script:
  - echo "Starting..."
  - echo `pwd`
  - export GRADLE_USER_HOME=`pwd`/.gradle
  # Remove caches
  - rm -f  .gradle/caches/modules-2/modules-2.lock
  - rm -fr .gradle/caches/*/plugin-resolution/

stages:
  - build
  - test
  - deploy

Build:
  stage: build
  rules:
    - if: '$CI_COMMIT_MESSAGE !~ /^[SKIP CI].*$/ && $CI_COMMIT_BRANCH == "master"'
  script:
    - gradle build

Test:
  stage: test
  rules:
    - if: '$CI_COMMIT_MESSAGE !~ /^[SKIP CI].*$/'
  image: gradle:6.3.0-jdk11
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - gradle :check
    - gradle :jacocoTestReport
    - gradle sonarqube
    - cat build/reports/jacoco/test/html/index.html
    - grep -Eo "Total.*?([0â€“9]{1,3})%" build/reports/jacoco/test/html/index.html
  artifacts:
    when: always
    paths:
      - build/reports/jacoco/test/html/*

Deployment:
  only:
    - master
  image: ruby:2.4
  stage: deploy
  rules:
    - if: '$CI_COMMIT_MESSAGE !~ /^[SKIP CI].*$/ && $CI_COMMIT_BRANCH == "master"'
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
    - heroku run --app $HEROKU_APPNAME migrate
  environment:
    name: production
    url: $HEROKU_APP_HOST

after_script:
  - echo "Success!"
